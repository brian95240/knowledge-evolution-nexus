version: '3.8'

services:
  ken-agent-generation:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ken-agent-generation
    restart: unless-stopped
    ports:
      - "8004:8004"
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
      - KEN_ENVIRONMENT=production
      - KEN_LOG_LEVEL=info
      - KEN_MAX_AGENTS=1000
      - KEN_AGENT_DATA_DIR=/app/data/agents
      - KEN_MODELS_DIR=/app/data/models
      - KEN_TRAINING_DATA_DIR=/app/data/training
      - KEN_LIFECYCLE_DB=/app/data/lifecycle.db
    volumes:
      - ken_agent_data:/app/data
      - ken_agent_logs:/app/logs
      - ken_agent_models:/app/models
      - ken_agent_cache:/app/cache
      - /var/run/docker.sock:/var/run/docker.sock  # For container management
    networks:
      - ken-network
    depends_on:
      - ken-agent-db
      - ken-agent-redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

  ken-agent-db:
    image: postgres:15-alpine
    container_name: ken-agent-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ken_agents
      - POSTGRES_USER=ken_agent_user
      - POSTGRES_PASSWORD=${KEN_AGENT_DB_PASSWORD:-ken_secure_password_2024}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ken_agent_db_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ken-network
    ports:
      - "5434:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ken_agent_user -d ken_agents"]
      interval: 10s
      timeout: 5s
      retries: 5

  ken-agent-redis:
    image: redis:7-alpine
    container_name: ken-agent-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${KEN_AGENT_REDIS_PASSWORD:-ken_redis_secure_2024}
    volumes:
      - ken_agent_redis_data:/data
    networks:
      - ken-network
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ken-agent-monitor:
    image: prom/prometheus:latest
    container_name: ken-agent-monitor
    restart: unless-stopped
    ports:
      - "9091:9090"  # Different port to avoid conflicts
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ken_agent_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ken-network

  ken-agent-grafana:
    image: grafana/grafana:latest
    container_name: ken-agent-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"  # Different port to avoid conflicts
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${KEN_GRAFANA_PASSWORD:-ken_grafana_2024}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ken_agent_grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ken-network

  ken-agent-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: ken-agent-worker
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE=${OPENAI_API_BASE}
      - KEN_ENVIRONMENT=production
      - KEN_WORKER_TYPE=agent_generation
      - KEN_REDIS_URL=redis://:${KEN_AGENT_REDIS_PASSWORD:-ken_redis_secure_2024}@ken-agent-redis:6379
      - KEN_DB_URL=postgresql://ken_agent_user:${KEN_AGENT_DB_PASSWORD:-ken_secure_password_2024}@ken-agent-db:5432/ken_agents
    volumes:
      - ken_agent_data:/app/data
      - ken_agent_models:/app/models
      - ken_agent_cache:/app/cache
    networks:
      - ken-network
    depends_on:
      - ken-agent-db
      - ken-agent-redis
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

volumes:
  ken_agent_data:
    driver: local
  ken_agent_logs:
    driver: local
  ken_agent_models:
    driver: local
  ken_agent_cache:
    driver: local
  ken_agent_db_data:
    driver: local
  ken_agent_redis_data:
    driver: local
  ken_agent_prometheus_data:
    driver: local
  ken_agent_grafana_data:
    driver: local

networks:
  ken-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

